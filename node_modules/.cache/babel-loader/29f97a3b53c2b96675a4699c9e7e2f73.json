{"remainingRequest":"/Users/caiyuecheng/Documents/JS-Daily-Project/node_modules/thread-loader/dist/cjs.js!/Users/caiyuecheng/Documents/JS-Daily-Project/node_modules/babel-loader/lib/index.js!/Users/caiyuecheng/Documents/JS-Daily-Project/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/caiyuecheng/Documents/JS-Daily-Project/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/caiyuecheng/Documents/JS-Daily-Project/src/components/TaskList.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/caiyuecheng/Documents/JS-Daily-Project/src/components/TaskList.vue","mtime":1619416705344},{"path":"/Users/caiyuecheng/Documents/JS-Daily-Project/node_modules/cache-loader/dist/cjs.js","mtime":1619408752446},{"path":"/Users/caiyuecheng/Documents/JS-Daily-Project/node_modules/thread-loader/dist/cjs.js","mtime":1619408754803},{"path":"/Users/caiyuecheng/Documents/JS-Daily-Project/node_modules/babel-loader/lib/index.js","mtime":1619408752379},{"path":"/Users/caiyuecheng/Documents/JS-Daily-Project/node_modules/cache-loader/dist/cjs.js","mtime":1619408752446},{"path":"/Users/caiyuecheng/Documents/JS-Daily-Project/node_modules/vue-loader-v16/dist/index.js","mtime":1619408754886}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnRyaW0uanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maW5kLmpzIjsKaW1wb3J0IERhdGVJbnB1dCBmcm9tICdAL2NvbXBvbmVudHMvRGF0ZVBpY2tlcic7CmltcG9ydCBDb2xvclBpY2tlciBmcm9tICdAL2NvbXBvbmVudHMvQ29sb3JQaWNrZXInOwppbXBvcnQgRXZlbnRTZXJ2aWNlIGZyb20gJ0Avc2VydmljZXMvRXZlbnRTZXJ2aWNlLmpzJzsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIERhdGVJbnB1dDogRGF0ZUlucHV0LAogICAgQ29sb3JQaWNrZXI6IENvbG9yUGlja2VyCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdGFza05hbWU6ICcnLAogICAgICB0YXNrTGlzdDogbnVsbCwKICAgICAgdGFza0luZGV4OiAwLAogICAgICBkYXRlVmFsdWU6ICcnLAogICAgICB0eXBlczogW3sKICAgICAgICAndHlwZW5hbWUnOiAnYnVzaW5lc3MnLAogICAgICAgICdjb2xvcic6ICcjNTI0RUVFJwogICAgICB9LCB7CiAgICAgICAgJ3R5cGVuYW1lJzogJ3BlcnNvbmFsJywKICAgICAgICAnY29sb3InOiAnIzZGQ0Y5NycKICAgICAgfV0KICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICBFdmVudFNlcnZpY2UuZ2V0VGFza3MoKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICBfdGhpcy50YXNrTGlzdCA9IHJlc3BvbnNlLmRhdGE7CiAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgfSk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBhZGRUYXNrOiBmdW5jdGlvbiBhZGRUYXNrKCkgewogICAgICBpZiAodGhpcy50YXNrTmFtZS50cmltKCkubGVuZ3RoID09PSAwKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB0aGlzLnRhc2tMaXN0LnVuc2hpZnQoewogICAgICAgICdpZCc6IHRoaXMudGFza0xpc3QubGVuZ3RoLAogICAgICAgICduYW1lJzogdGhpcy50YXNrTmFtZSwKICAgICAgICAnY2F0ZWdvcnknOiB0aGlzLmNhdGVnb3J5LAogICAgICAgICdkdWVkYXRlJzogdGhpcy5kYXRlVmFsdWUsCiAgICAgICAgJ2lzRG9uZSc6IGZhbHNlCiAgICAgIH0pOwogICAgICB0aGlzLnRhc2tOYW1lID0gJyc7CiAgICB9LAogICAgcmVtb3ZlVGFzazogZnVuY3Rpb24gcmVtb3ZlVGFzayhpbmRleCkgewogICAgICB0aGlzLnRhc2tMaXN0LnNwbGljZShpbmRleCwgMSk7CiAgICB9LAogICAgZ2V0Q29sb3I6IGZ1bmN0aW9uIGdldENvbG9yKGNhdG5hbWUpIHsKICAgICAgaWYgKCFjYXRuYW1lKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB2YXIgY2F0Y29sb3IgPSB0aGlzLnR5cGVzLmZpbmQoZnVuY3Rpb24gKHR5cGUpIHsKICAgICAgICByZXR1cm4gdHlwZS50eXBlbmFtZSA9PT0gY2F0bmFtZTsKICAgICAgfSkuY29sb3I7CiAgICAgIHJldHVybiAiIi5jb25jYXQoY2F0Y29sb3IpOwogICAgfSwKICAgIGlzVG9kYXk6IGZ1bmN0aW9uIGlzVG9kYXkoKSB7CiAgICAgIHZhciB0b2RheSA9IG5ldyBEYXRlKCkudG9Mb2NhbGVEYXRlU3RyaW5nKCk7CgogICAgICBpZiAodGhpcy50YXNrLmR1ZWRhdGUgPT09IHRvZGF5KSB7CiAgICAgICAgcmV0dXJuICJ0b2RheSI7CiAgICAgIH0gZWxzZSByZXR1cm4gdGhpcy50YXNrLmR1ZWRhdGU7CiAgICB9CiAgfSwKICBjb21wdXRlZDoge30KfTs="},{"version":3,"sources":["/Users/caiyuecheng/Documents/JS-Daily-Project/src/components/TaskList.vue"],"names":[],"mappings":";;;AAqCA,OAAO,SAAP,MAAsB,yBAAtB;AACA,OAAO,WAAP,MAAwB,0BAAxB;AACA,OAAO,YAAP,MAAyB,4BAAzB;AAEA,eAAe;AACX,EAAA,UAAU,EAAC;AACP,IAAA,SAAS,EAAT,SADO;AAEP,IAAA,WAAU,EAAV;AAFO,GADA;AAKX,EAAA,IALW,kBAKL;AACF,WAAM;AACF,MAAA,QAAQ,EAAC,EADP;AAEF,MAAA,QAAQ,EAAC,IAFP;AAGF,MAAA,SAAS,EAAC,CAHR;AAIF,MAAA,SAAS,EAAC,EAJR;AAKF,MAAA,KAAK,EAAC,CAAC;AAAC,oBAAW,UAAZ;AAAuB,iBAAQ;AAA/B,OAAD,EAA2C;AAAC,oBAAW,UAAZ;AAAuB,iBAAQ;AAA/B,OAA3C;AALJ,KAAN;AAOH,GAbU;AAcX,EAAA,OAdW,qBAcF;AAAA;;AACL,IAAA,YAAY,CAAC,QAAb,GACC,IADD,CACM,UAAA,QAAQ,EAAE;AACZ,MAAA,KAAI,CAAC,QAAL,GAAgB,QAAQ,CAAC,IAAzB;AACH,KAHD,EAIC,KAJD,CAIO,UAAA,KAAK,EAAE;AACV,MAAA,OAAO,CAAC,GAAR,CAAY,KAAZ;AACH,KAND;AAOH,GAtBU;AAuBX,EAAA,OAAO,EAAC;AACJ,IAAA,OADI,qBACK;AACL,UAAG,KAAK,QAAL,CAAc,IAAd,GAAqB,MAArB,KAA8B,CAAjC,EAAmC;AAC/B;AACJ;;AAEA,WAAK,QAAL,CAAc,OAAd,CAAsB;AAAC,cAAK,KAAK,QAAL,CAAc,MAApB;AAA4B,gBAAO,KAAK,QAAxC;AAAiD,oBAAW,KAAK,QAAjE;AAA0E,mBAAU,KAAK,SAAzF;AAAmG,kBAAS;AAA5G,OAAtB;AACA,WAAK,QAAL,GAAc,EAAd;AACH,KARG;AASJ,IAAA,UATI,sBASO,KATP,EASa;AACb,WAAK,QAAL,CAAc,MAAd,CAAqB,KAArB,EAA2B,CAA3B;AACH,KAXG;AAYJ,IAAA,QAZI,oBAYK,OAZL,EAYa;AACb,UAAG,CAAC,OAAJ,EAAY;AACR;AACJ;;AAEA,UAAI,QAAQ,GAAE,KAAK,KAAL,CAAW,IAAX,CAAgB,UAAA,IAAG;AAAA,eAAK,IAAI,CAAC,QAAL,KAAgB,OAArB;AAAA,OAAnB,EAAiD,KAA/D;AACA,uBAAU,QAAV;AACH,KAnBG;AAoBJ,IAAA,OApBI,qBAoBK;AACL,UAAM,KAAK,GAAC,IAAI,IAAJ,GAAW,kBAAX,EAAZ;;AACA,UAAG,KAAK,IAAL,CAAU,OAAV,KAAsB,KAAzB,EAA+B;AAC3B;AACH,OAFD,MAEM,OAAO,KAAK,IAAL,CAAU,OAAjB;AACV;AAzBI,GAvBG;AAkDX,EAAA,QAAQ,EAAC;AAlDE,CAAf","sourcesContent":["<template>\n    <div class=\"task-container\">\n        <div class=\"task-header\">\n            <div class=\"task-input\">\n                <input v-model=\"taskName\" placeholder=\"Write Somthing\" @keypress.enter=\"addTask()\">\n                <div class=\"task-add-btn\" @click=\"addTask()\">+</div>\n            </div>\n            <div class=\"task-options\">\n                <div class=\"task-catagory\">\n                    <p class=\"taskOption-label\">Color</p>\n                    <ColorPicker></ColorPicker>\n                </div>\n                <div class=\"task-duedate\">\n                    <p class=\"taskOption-label\">Due Date</p>\n                    <DateInput v-model:modelValue=\"dateValue\"></DateInput>\n                </div>\n            </div>\n        </div>\n        <div class=\"task-list\">\n            <div class=\"task-item\" v-for=\"(task,index) in taskList\" :key=\"index\">\n                <div class=\"task-item-left\">\n                    <input type=\"checkbox\" v-model=\"task.isDone\" :id=\"task.id\">\n                    <label :for=\"task.id\" :class=\"{isDone:task.isDone}\" class=\"task-item-name\"><span></span>{{task.name}}</label>\n                </div>\n                <div class=\"task-item-right\">\n                    <div>{{task.duedate}}</div>\n                    <div class=\"remove\" :class=\"{showRemove:task.isDone}\" @click=\"removeTask(index)\"><img src=\"../assets/images/remove.svg\"></div>\n                </div>\n                \n            </div>\n        </div>\n        \n    </div>\n    \n</template>\n\n<script>\nimport DateInput from '@/components/DatePicker'\nimport ColorPicker from '@/components/ColorPicker'\nimport EventService from '@/services/EventService.js'\n\nexport default {\n    components:{\n        DateInput,\n        ColorPicker\n        },\n    data(){\n        return{\n            taskName:'',\n            taskList:null,\n            taskIndex:0,\n            dateValue:'',\n            types:[{'typename':'business','color':'#524EEE'},{'typename':'personal','color':'#6FCF97'}]\n        }\n    },\n    created(){\n        EventService.getTasks()\n        .then(response=>{\n            this.taskList = response.data\n        })\n        .catch(error=>{\n            console.log(error)\n        })\n    },\n    methods:{\n        addTask(){\n            if(this.taskName.trim().length===0){\n                return\n            }\n\n            this.taskList.unshift({'id':this.taskList.length ,'name':this.taskName,'category':this.category,'duedate':this.dateValue,'isDone':false});\n            this.taskName=''\n        },\n        removeTask(index){\n            this.taskList.splice(index,1)\n        },\n        getColor(catname){\n            if(!catname){\n                return\n            }\n\n            let catcolor= this.types.find(type => type.typename===catname).color;\n            return `${catcolor}`;\n        },\n        isToday(){\n            const today=new Date().toLocaleDateString();\n            if(this.task.duedate === today){\n                return `today`\n            }else return this.task.duedate\n        }    \n    },\n    computed:{\n        \n    }\n}\n</script>\n\n<style scoped>\n    .task-container{\n        width:480px;\n        margin:1em;\n    }\n\n    .task-header{\n        width:480px;\n        background-color:var(--highlight);\n        border-radius: 1em;\n        padding:2em;\n        box-sizing: border-box;\n        margin-bottom:1em;\n    }\n\n    .task-input{\n        display:flex;\n        width:100%;\n        justify-content: space-between;\n    }\n\n    .task-input input{\n        font-weight: 500;\n        font-size:2em;\n        background-color:transparent;\n        color:var(--truewhite);\n        border:none;\n        border-bottom:1px solid var(--upper);\n        padding-bottom:0.25em;\n        -webkit-appearance: none;\n        width:340px;\n    }\n\n    .task-add-btn{\n        background-color:var(--primary);\n        width:40px;\n        height:40px;\n        display: flex;\n        border-radius: 20px;\n        justify-content: center;\n        align-items: center;\n        color:var(--truewhite);\n        font-size: 2em;\n    }\n\n    .task-add-btn:hover{\n        background-color: var(--caption);\n    }\n\n    .task-catagory, .task-duedate{\n        display: block;\n        text-align: left;\n    }\n\n    .task-options{\n        margin-top:1em;\n    }\n\n    .taskOption-label{\n        display:block;\n        margin:0;\n        color:var(--caption);\n        font-size:1em;\n        margin-bottom: 0.5em;\n    }\n\n    .task-list{\n        width:480px\n    }\n\n    .task-item{\n        display: flex;\n        box-sizing: border-box;\n        background-color: var(--highlight);\n        width:480px;\n        border-radius: 1em;\n        padding:1em;\n        justify-content: space-between;\n        align-items: center;\n        margin-bottom: 1em;\n    }\n\n    .task-item-name{\n        font-weight:300;\n        font-size:1.5em;\n        color:var(--white);\n        padding-left:0.5em;\n    }\n\n    .task-item-right{\n        display:inline-flex;\n        align-self: center;\n    }\n\n\n    input[type=\"checkbox\"]{\n        display:none;\n    }\n\n    input[type=\"checkbox\"] + label span {\n        display: inline-flex;\n        box-sizing: border-box;\n        width:21px;\n        height:21px;\n        border:3px solid;\n        border-color:var(--contrast);\n        border-radius:6px;\n        cursor:pointer;\n        margin-right:0.5em;\n    }\n\n    input[type=\"checkbox\"]:checked + label span{\n        background:url(\"../assets/images/check.svg\") 1px 2px no-repeat, #42416C;\n    }\n\n    .remove{\n        display: none;\n    }\n\n    .showRemove{\n        display: block;\n    }\n\n    .isDone{\n        text-decoration: line-through;\n        color:var(--disabled)\n    }\n\n</style>"],"sourceRoot":""}]}